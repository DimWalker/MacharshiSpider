import re


def extract_module(text):
    # 使用正则表达式找到所有[]中的内容
    matches = re.findall(r'\[(.*?)\]', text)
    # 使用集合去重
    unique_matches = set(matches)
    # 将集合转换为列表并排序
    result_list = sorted(list(unique_matches))
    return result_list


def module_boss_to_rail(rail_obj):
    modules = []
    for b in rail_obj["boss"]:
        modules += rail_obj["boss"][b]
    modules = sorted(list(set(modules)))
    rail_obj["modules"] = modules

    return rail_obj


def rail11():
    皮普 = """
[触元件-击破]、[触元件-释能]
[触元件-背水]、[触元件-攻坚]、
[应元件-破足]、[应元件-重整],
[应元件-激励]、[应元件-昂扬].
[应元件-奋发]。
[触元件-背水]、[触元件-攻坚]、
[触元件-释能]、[触元件-击破]
[应元件-破足]、[应元件-重整]、
[应元件-昂扬]、[应元件-激励].
[应元件-奋发]。
[触元件-击破]、[触元件-侵攻]
[触元件-合击]、[触元件-背水]、
[触元件-释能]、[触元件-攻坚].
[应元件-破足]、[应元件-重整]、
[应元件-激励]、[应元件-昂扬].
[应元件-奋发]。
[触元件-击破]、[触元件-侵攻].
[触元件-合击]、[触元件-背水]、
[触元件-释能]、[触元件-攻坚]、
[应元件-破足]、[应元件-重整]
[应元件-激励]、[应元件-昂扬]
[应元件-奋发]。
[触元件-击破]、[触元件-侵攻]、
[触元件-合击]、[触元件-背水]
[触元件-释能]、[触元件-攻坚]
[应元件-破足]、[应元件-重整]、
[应元件-激励]、[应元件-昂扬]、
[应元件-奋发]。
[触元件-击破]、[触元件-合击]
[触元件-背水]、[触元件-释能].
[触元件-攻坚]、[应元件-破足]、
[应元件-重整]、[应元件-激励]
[应元件-昂扬]、[应元件-奋发]
    """

    艾格伯特 = """
[触元件-反击]、[触元件-精准]、
[触元件-坚守]、[触元件-临敌]、
[应元件-增幅]、[应元件-强击]、
[应元件-穿甲]、[应元件-重整]、
[应元件-抵抗]、[应元件-应急]。
[触元件-反击]、[触元件-精准]
[触元件-临敌]、[应元件-增幅]、
[应元件-强击]、[应元件-穿甲]、
[应元件-重整]、[应元件-应急]。
[触元件-反击]、[触元件-精准]、
[触元件-临敌]、[应元件-增幅]
[应元件-强击]、[应元件-穿甲]、
[应元件-重整]、[应元件-应急]。
[触元件-反击]、[触元件-警戒]、
[触元件-精准]、[触元件-临敌]、
[应元件-增幅]、[应元件-强击]、
[应元件-穿甲]、[应元件-重整]、
[应元件-应急]。
[触元件-临敌]、[应元件-增幅]、
[应元件-强击]、[应元件-穿甲]、
[应元件-重整]、[应元件-应急]。
[触元件-临敌]、[应元件-增幅].
[应元件-强击]、[应元件-穿甲]、
[应元件-重整]、[应元件-应急]。
    """

    里德瓦尔德 = """
[触元件-压迫]、[触元件-背水]、
[触元件-歼灭]、[触元件-连击].
[触元件-攻坚]、[应元件-强击]、
[应元件-爆破]、[应元件-溅射].
[应元件-激励]、[应元件-昂扬]
[触元件-压迫]、[触元件-背水]、
[触元件-歼灭]、[触元件-连击]、
[触元件-攻坚]、[应元件-强击]、
[应元件-爆破]、[应元件-溅射]、
[应元件-激励]、[应元件-昂扬]
[触元件-压迫]、[触元件-侵攻]、
[触元件-背水]、[触元件-歼灭]、
[触元件-连击]、[触元件-攻坚]、
[应元件-强击]、[应元件-激励].
[应元件-昂扬]。
[触元件-背水]、[应元件-强击]
[应元件-激励]、[应元件-昂扬]。
[触元件-侵攻]、[触元件-背水].
[应元件-强击]、[应元件-爆破].
[应元件-溅射]、[应元件-激励]
[应元件-昂扬]。
[触元件-侵攻]、[触元件-背水]、
[应元件-强击]、[应元件-昂扬].
[应元件-激励]。
    """

    安德烈亚 = """
[触元件-反击]、[触元件-坚守]、
[触元件-临敌]、[应元件-号令]
[应元件-破臂]、[应元件-溅射].
[应元件-抵抗]、[应元件-应急]、
[应元件-奋发]。
[触元件-反击]、[触元件-合击]、
[触元件-临敌]、[应元件-号令]、
[应元件-破臂]、[应元件-应急]、
[应元件-奋发]。
[触元件-反击]、[触元件-合击]、
[触元件-临敌]、[应元件-号令]、
[应元件-破臂]、[应元件-应急]、
[应元件-奋发]。
[触元件-反击]、[触元件-警戒].
[触元件-合击]、[触元件-临敌]、
[应元件-号令]、[应元件-破臂]、
[应元件-溅射]、[应元件-应急]、
[应元件-奋发]。
[触元件-临敌]、[应元件-破臂]、
[应元件-应急]、[应元件-奋发]。
    """

    rail = {"name": "weapon_rail_11"}
    rail["boss"] = {}
    rail["boss"]["皮普"] = extract_module(皮普)
    rail["boss"]["艾格伯特"] = extract_module(艾格伯特)
    rail["boss"]["里德瓦尔德"] = extract_module(里德瓦尔德)
    rail["boss"]["安德烈亚"] = extract_module(安德烈亚)

    return module_boss_to_rail(rail)


def rail12():
    曼恩 = """
[触元件-连击]、[应元件-爆破]、
[应元件-溅射]。
[触元件-连击]、[应元件-爆破]、
[应元件-溅射]。
[触元件-连击]、[触元件W-连击]
[触元件W-释能]、[触元件W-压迫]
[应元件W-破臂]、[应元件W-增幅]
[触元件-警戒]、[触元件-连击]
[应元件-爆破]、[应元件-溅射]。
[触元件-警戒]、[触元件-连击].
[应元件-爆破]、[应元件-溅射]。
[触元件-警戒]、[触元件-连击]
[触元件W-连击]、[触元件W-释能]
[触元件W-压迫]、[应元件-爆破]
[应元件-溅射]、[应元件W-破臂]、
[应元件W-爆破]、[应元件W-增幅]
    """

    米凯拉 = """
[触元件-坚守]、[触元件-临敌]、
[触元件-攻坚]、[触元件-释能]
[触元件-击破]、[触元件-沉着]
[应元件-破足]、[应元件-抵抗]、
[应元件-重整]、[应元件-奋发]
[应元件-战栗]。
[触元件-临敌]、[触元件-攻坚]
[触元件-释能]、[触元件-击破]
[触元件-沉着]、[应元件-破足]、
[应元件-重整]、[应元件-奋发]
[应元件-战栗]。
[触元件-临敌]、[触元件-攻坚]、
[触元件-释能]、[触元件-击破]、
[触元件-沉着]、[应元件-破足]、
[应元件-重整]、[应元件-奋发]、
[应元件-战栗]。
[触元件-临敌]、[触元件-释能]
[触元件-沉着]、[应元件-破足]、
[应元件-重整]、[应元件-奋发]
[应元件-战栗]。
[触元件-临敌]、[触元件-释能].
[触元件-沉着]、[应元件-破足]、
[应元件-重整]、[应元件-奋发]
[应元件-战栗]。
    """

    阿德里安 = """
[触元件-侵攻]、[触元件-背水]、
[触元件-精准]、[触元件-焕发].
[触元件W-侵攻]、[应元件-强击]
[应元件-应急]、[应元件-激励].
[应元件-增幅]、[应元件W-昂扬]。
[触元件-背水]、[触元件-精准]
[触元件-焕发]、[应元件-强击]、
[应元件-应急]、[应元件-激励].
[应元件-增幅]。
[触元件-背水]、[触元件-精准]
[触元件-焕发]、[应元件-强击]、
[应元件-应急]、[应元件-激励]
[应元件-增幅]。
[触元件-侵攻]、[触元件-背水]
[触元件-焕发]、[应元件-强击]、
[应元件-应急]、[应元件-激励]
[应元件-增幅]。
[触元件-侵攻]、[触元件-背水].
[触元件-焕发]、[应元件-强击]、
[应元件-应急]、[应元件-激励].
[应元件-增幅]。
[触元件-侵攻]、[触元件-背水]、
[触元件-焕发]、[触元件W-侵攻]
[应元件-强击]、[应元件-应急]、
[应元件-激励]、[应元件-增幅]、
[应元件W-昂扬]。
    """

    薇拉 = """
[触元件-反击]、[触元件-合击]、
[触元件-歼灭]、[触元件-压迫]、
[触元件W-临敌]、[应元件-破臂]、
[应元件-穿甲]、[应元件-昂扬]、
[应元件-号令]、[应元件-腾挪]、
[应元件W-穿甲]。
[触元件-反击]、[触元件-合击]、
[触元件-歼灭]、[触元件-压迫]
[应元件-破臂]、[应元件-穿甲]、
[应元件-昂扬]、[应元件-号令]、
[应元件-腾挪]。
[触元件-反击]、[触元件-合击].
[触元件-歼灭]、[触元件-压迫],
[应元件-破臂]、[应元件-穿甲]
[应元件-昂扬]、[应元件-号令]、
[应元件-腾挪]。
[触元件-反击]、[触元件-合击].
[触元件-歼灭]、[触元件-压迫]
[应元件-破臂]、[应元件-穿甲]、
[应元件-昂扬]、[应元件-号令]、
[应元件-腾挪]。
[触元件-反击]、[触元件-合击].
[触元件-歼灭]、[触元件-压迫]
[应元件-破臂]、[应元件-穿甲]、
[应元件-昂扬]、[应元件-号令]、
[应元件-腾挪]。
[触元件-反击]、[触元件-合击]
[触元件-歼灭]、[触元件-压迫].
[应元件-破臂]、[应元件-穿甲]、
[应元件-昂扬]、[应元件-号令]、
[应元件-腾挪]。
[触元件-合击]、[应元件-破臂]、
[应元件-穿甲]、[应元件-昂扬]。
    """

    rail = {"name": "weapon_rail_12"}
    rail["boss"] = {}
    rail["boss"]["曼恩"] = extract_module(曼恩)
    rail["boss"]["米凯拉"] = extract_module(米凯拉)
    rail["boss"]["阿德里安"] = extract_module(阿德里安)
    rail["boss"]["薇拉"] = extract_module(薇拉)

    return module_boss_to_rail(rail)


def rail13():
    瑞娜 = """
[触元件-侵攻]、[触元件-反击]、
[触元件-背水]、[触元件-攻坚]、
[触元件-精准]、[触元件-焕发]
[应元件-破臂]、[应元件-穿甲]、
[应元件-重整]、[应元件-昂扬]、
[应元件-蓬勃]
[触元件-侵攻]、[触元件-反击]、
[触元件-背水]、[触元件-攻坚]、
[触元件-精准]、[触元件-焕发]、
[应元件-破臂]、[应元件-穿甲]、
[应元件-重整]、[应元件-昂扬]、
[应元件-蓬勃]。
[触元件-反击]、[触元件-警戒].
[触元件-背水]、[触元件-攻坚]
[触元件-精准]、[触元件-焕发]、
[应元件-破臂]、[应元件-穿甲].
[应元件-爆破]、[应元件-重整]、
[应元件-昂扬]、[应元件-蓬勃]。
[触元件-反击]、[触元件-警戒]、
[触元件-背水]、[触元件-攻坚].
[触元件-精准]、[触元件-焕发]
[应元件-破臂]、[应元件-穿甲]、
[应元件-爆破]、[应元件-重整]、
[应元件-昂扬]、[应元件-蓬勃]。
[触元件-侵攻]、[触元件-背水]、
[触元件-焕发]、[应元件-破臂]、
[应元件-穿甲]、[应元件-重整]、
[应元件-昂扬]、[应元件-蓬勃]
[触元件-侵攻]、[触元件-背水]、
[触元件-焕发]、[应元件-破臂],、
[应元件-穿甲]、[应元件-重整]、
[应元件-昂扬]、[应元件-蓬勃]
    """

    孤狼 = """
[触元件-沉着]、[触元件-无患].
[触元件W-侵攻]、[触元件W-反击]
[触元件W-临敌]、[触元件W-释能]
[应元件-战栗]、[应元件W-爆破]、
[应元件W-溅射]、[应元件W-昂扬]
[应元件W-号令]。
[触元件-坚守]、[触元件-沉着]、
[触元件-无患]、[应元件-抵抗].
[应元件-战栗]。
[触元件-沉着]、[触元件-无患]
[应元件-战栗]。
[触元件-沉着]、[触元件-无患]
[应元件-战栗]。
[触元件-沉着]、[触元件-无患].
[应元件-战栗]。
[触元件-沉着]、[触元件-无患]
[触元件W-侵攻]、[触元件W-临敌]
[触元件W-释能]、[应元件-战栗]
[应元件W-爆破]、[应元件W-溅射].
[应元件W-昂扬]。
    """

    乔恩 = """
[触元件-击破]、[触元件-凭逸]、
[应元件-强击]、[应元件-溅射]、
[应元件-腾挪]、[应元件-同忾]。
[触元件-击破]、[触元件-凭逸].
[应元件-强击]、[应元件-溅射]
[应元件-腾挪]、[应元件-同忾]。
[触元件-坚守]、[触元件-击破]、
[触元件-凭逸]、[应元件-强击]、
[应元件-溅射]、[应元件-腾挪].
[应元件-同忾]。
[触元件-击破]、[触元件-凭逸].
[触元件W-合击]、[触元件W-攻坚]、
[触元件W-压迫]、[触元件W-沉着]
[应元件-强击]、[应元件-腾挪]、
[应元件-同忾]、[应元件W-强击]、
[应元件W-破臂]、[应元件W-穿甲]。
[触元件-击破]、[触元件-凭逸]
[触元件W-合击]、[触元件W-攻坚]、
[触元件W-压迫]、[触元件W-沉着]
[应元件-强击]、[应元件-溅射]、
[应元件-腾挪]、[应元件-同忾]、
[应元件W-强击]、[应元件W-破臂]
[应元件W-穿甲]。
[触元件-凭逸]、[触元件W-合击]
[触元件W-沉着]、[应元件-强击]
[应元件-同忾]、[应元件W-强击]
[应元件W-破臂]、[应元件W-穿甲]。
    """

    道格拉斯 = """
[触元件-连击]、[触元件-歼灭]、
[触元件-遏近]、[触元件W-连击]
[触元件W-背水]、[应元件-破足]
[应元件-激励]、[应元件-号令]、
[应元件W-应急]、[应元件W-奋发]
[应元件W-增幅]。
[触元件-连击]、[触元件-合击]
[触元件-歼灭]、[触元件-遏近]
[应元件-破足]、[应元件-激励].
[应元件-号令]、[应元件-扩膛]。
[触元件-连击]、[触元件-合击]、
[触元件-歼灭]、[触元件-遏近].
[应元件-破足]、[应元件-激励]、
[应元件-号令]、[应元件-扩膛]
[触元件-连击]、[触元件-合击]
[触元件-歼灭]、[触元件-遏近]
[应元件-破足]、[应元件-激励]
[应元件-号令]、[应元件-扩膛]。
[触元件-连击]、[触元件-合击]、
[触元件-歼灭]、[触元件-遏近]、
[应元件-破足]、[应元件-激励]、
[应元件-号令]、[应元件-扩膛]。
    """

    rail = {"name": "weapon_rail_13"}
    rail["boss"] = {}
    rail["boss"]["瑞娜"] = extract_module(瑞娜)
    rail["boss"]["孤狼"] = extract_module(孤狼)
    rail["boss"]["乔恩"] = extract_module(乔恩)
    rail["boss"]["道格拉斯"] = extract_module(道格拉斯)

    return module_boss_to_rail(rail)


def rail14():
    古兹曼 = """
[触元件-无患]、[触元件-沉着]
[触元件-连击]、[触元件-摧朽]、
[触元件-反击]、[触元件-坚守]、
[应元件-激励]、[应元件-强击]、
[应元件-抵抗]。
[触元件-反击]、[触元件-连击]、
[触元件-沉着]、[触元件-无患]、
[触元件-摧朽]、[触元件W-连击]
[应元件-强击]、[应元件-激励]
[应元件W-破臂]、[应元件W-破足]。
[触元件-无患]、[触元件-沉着]、
[触元件-连击]、[触元件-摧朽]、
[触元件-反击]、[应元件-扩膛]
[应元件-激励]、[应元件-强击]。
[触元件-无患]、[触元件-沉着]、
[触元件-连击]、[触元件-摧朽]、
[触元件-反击]、[应元件-扩膛]、
[应元件-激励]、[应元件-强击]。
[触元件-无患]、[触元件-沉着]
[应元件-激励]、[应元件-强击]。
[触元件-无患]、[触元件-沉着].
[应元件-激励]、[应元件-强击]
    """

    萨米 = """
[触元件-侵攻]、[触元件-精准]、
[触元件-遏近]、[触元件-猛进]
[触元件W-背水]、[触元件W-压迫]
[应元件-重整]、[应元件-号令]、
[应元件-腾挪]、[应元件-模糊]
[应元件W-强击]、[应元件W-爆破]。
[触元件-侵攻]、[触元件-遏近].
[触元件-猛进]、[触元件-精准]
[应元件-腾挪]、[应元件-号令]、
[应元件-重整]、[应元件-模糊]
[触元件-侵攻]、[触元件-遏近]、
[触元件-猛进]、[触元件-精准]
[应元件-腾挪]、[应元件-号令]、
[应元件-重整]、[应元件-模糊]
[触元件-侵攻]、[触元件-猛进]、
[应元件-重整]、[应元件-模糊]。
[触元件-侵攻]、[触元件-猛进]、
[应元件-重整]、[应元件-模糊]。
    """

    加西亚 = """
[触元件-背水]、[触元件-焕发]
[应元件-穿甲]、[应元件-溅射]、
[应元件-同忾]、[应元件-短路]、
[应元件-战栗]。
[触元件-背水]、[触元件-焕发]、
[应元件-穿甲]、[应元件-溅射]
[应元件-同忾]、[应元件-短路]、
[应元件-战栗]。
[触元件-背水]、[触元件-焕发]、
[应元件-穿甲]、[应元件-溅射]、
[应元件-同忾]、[应元件-短路]、
[应元件-战栗]。
[触元件-背水]、[触元件-焕发].
[触元件W-侵攻]、[触元件W-反击].
[触元件W-合击]、[触元件W-歼灭].
[应元件-穿甲]、[应元件-溅射]、
[应元件-战栗]、[应元件-同忾]
[应元件-短路]、[应元件W-奋发].
应元件W-增幅]。
[触元件-背水]、[触元件-焕发]
[应元件-穿甲]、[应元件-溅射]、
[应元件-同忾]、[应元件-短路]、
[应元件-战栗]
[触元件-背水]、[触元件-焕发]、
[应元件-穿甲]、[应元件-溅射]、
[应元件-同忾]、[应元件-短路]、
[应元件-战栗]。
    """

    黛博拉 = """
[触元件-凭逸]、[触元件-攻坚]、
[应元件-破足]、[应元件-蓬勃]、
[应元件-消弹]。
[触元件-凭逸]、[触元件-袭远].
[触元件-攻坚]、[触元件-合击]、
[应元件-破足]、[应元件-蓬勃]
[应元件-消弹]。
[触元件-凭逸]、[触元件-袭远].
[触元件-攻坚]、[触元件-合击]、
[应元件-破足]、[应元件-蓬勃]
[应元件-消弹]。
[触元件-合击]、[触元件-攻坚]、
[触元件-凭逸]、[触元件-袭远].
[触元件W-临敌]、[触元件W-沉着]
[触元件W-焕发]、[应元件-破足]、
[应元件-蓬勃]、[应元件-消弹].
[应元件W-昂扬]、[应元件W-号令]
[应元件W-战栗]。
[触元件-凭逸]、[触元件W-临敌]
[触元件W-沉着]、[触元件W-焕发]、
[应元件-破足]、[应元件-蓬勃]
[应元件W-昂扬]、[应元件W-战栗]。
[触元件-合击]、[触元件-凭逸].
[触元件W-临敌]、[触元件W-沉着]
[触元件W-焕发]、[应元件-破足]、
[应元件-蓬勃]、[应元件W-昂扬]、
[应元件W-战栗]。
    """

    rail = {"name": "weapon_rail_13"}
    rail["boss"] = {}
    rail["boss"]["古兹曼"] = extract_module(古兹曼)
    rail["boss"]["萨米"] = extract_module(萨米)
    rail["boss"]["加西亚"] = extract_module(加西亚)
    rail["boss"]["黛博拉"] = extract_module(黛博拉)

    return module_boss_to_rail(rail)


def rail15():
    里德瓦尔德 = """
[触元件-反击]、[触元件-焕发]、
[触元件-无患]、[触元件-凭逸]、
[应元件-强击]、[应元件-号令]、
[应元件-蓬勃]、[应元件-进发]。
[触元件-反击]、[触元件-焕发]、
[触元件-无患]、[触元件-凭逸].
[应元件-强击]、[应元件-号令]、
[应元件-蓬勃]、[应元件-进发]。
[触元件-反击]、[触元件-焕发]、
[触元件-无患]、[触元件-凭逸].
[触元件W-合击]、[触元件W-歼灭]
[触元件W-击破]、[应元件-强击].
[应元件-号令]、[应元件-蓬勃].
[应元件-进发]、[应元件W-破臂].
[应元件W-号令]。
[触元件-焕发]、[触元件-无患]、
[触元件-凭逸]、[应元件-强击]、
[应元件-蓬勃]、[应元件-进发]。
[触元件-焕发]、[触元件-无患]、
[触元件-凭逸]、[应元件-强击]、
[应元件-蓬勃]、[应元件-进发]。
[触元件-焕发]、[触元件-无患]
[触元件-凭逸]、[触元件W-合击]
[应元件-强击]、[应元件-蓬勃]
[应元件-进发]、[应元件W-破臂]。
    """

    埃勒 = """
[触元件-连击]、[触元件-攻坚]、
[触元件-破近]、[应元件-重整]、
[应元件-腾挪]、[应元件-模糊]、
[应元件-破躯]。
[触元件-连击]、[触元件-攻坚]
[触元件-破近]、[触元件W-侵攻]
[触元件W-反击]、[触元件W-背水]、
[应元件-重整]、[应元件-腾挪]、
[应元件-模糊]、[应元件-破躯]、
[应元件W-强击]、[应元件W-破足]
[应元件W-激励]。
[触元件-连击]、[触元件-攻坚]、
[触元件-破近]、[应元件-重整]、
[应元件-腾挪]、[应元件-模糊].
[应元件-破躯]。
[触元件-连击]、[触元件-攻坚]、
[触元件-破近]、[应元件-重整]
[应元件-腾挪]、[应元件-模糊]
[应元件-破躯]。
[触元件-连击]、[触元件-攻坚]、
[触元件-破近]、[应元件-重整]、
[应元件-腾挪]、[应元件-模糊]
[应元件-破躯]。
    """

    皮普 = """
[触元件-背水]、[触元件-猛进]
[触元件-摧朽]、[触元件-猛袭].
[应元件-穿甲]、[应元件-激励]、
[应元件-同忾]、[应元件-消弹]、
[应元件-整葺]。
[触元件-合击]、[触元件-背水]、
[触元件-猛进]、[触元件-摧朽]
[触元件-猛袭]、[应元件-穿甲].
[应元件-激励]、[应元件-同忾].
[应元件-消弹]、[应元件-整葺]
[触元件-合击]、[触元件-背水]
[触元件-猛进]、[触元件-摧朽]、
[触元件-猛袭]、[应元件-穿甲]
[应元件-激励]、[应元件-同忾]
[应元件-消弹]、[应元件-整葺]。
[触元件-合击]、[触元件-背水]、
[触元件-猛进]、[触元件-摧朽]
[触元件-猛袭]、[触元件W-精准]
[触元件W-沉着]、[应元件-穿甲]、
[应元件-激励]、[应元件-同忾]
[应元件-消弹]、[应元件-整葺]、
[应元件W-爆破]。
[触元件-合击]、[触元件-背水]
[触元件-猛进]、[应元件-穿甲]、
[应元件-激励]、[应元件-同忾].
[应元件-整葺]。
[触元件-合击]、[触元件-背水]、
[触元件-猛进]、[应元件-穿甲]、
[应元件-激励]、[应元件-同忾]、
[应元件-整葺]。
    """

    乔吉亚 = """
[触元件-坚守]、[触元件-精准].
[触元件-共力]、[应元件-抵抗]
[应元件-溅射]、[应元件-短路]。
[触元件-坚守]、[触元件-精准].
[触元件-共力]、[应元件-抵抗]
[应元件-溅射]、[应元件-短路]。
[触元件-精准]、[触元件W-连击]
[触元件W-焕发]、[应元件-短路]、
[应元件W-昂扬]、[应元件W-腾挪]
[应元件W-战栗]
[触元件-精准]、[触元件-袭远]、
[触元件-共力]、[应元件-溅射]
[应元件-短路]。
[触元件-精准]、[触元件-袭远].
[触元件-共力]、[应元件-溅射]
[应元件-短路]。
[触元件-共力]、[触元件W-焕发]、
[应元件-溅射]、[应元件-短路]、
[应元件W-溅射]、[应元件W-昂扬]
[应元件W-战栗]。
    """

    rail = {"name": "weapon_rail_13"}
    rail["boss"] = {}
    rail["boss"]["里德瓦尔德"] = extract_module(里德瓦尔德)
    rail["boss"]["埃勒"] = extract_module(埃勒)
    rail["boss"]["皮普"] = extract_module(皮普)
    rail["boss"]["乔吉亚"] = extract_module(乔吉亚)

    return module_boss_to_rail(rail)


def rail16():
    安德烈亚 = """
[触元件-坚守]、[触元件-临敌]、
[触元件-焕发]、[触元件-破近].
[触元件-激昂]、[应元件-抵抗].
[应元件-应急]、[应元件-模糊]、
[应元件-短路]、[应元件-整葺]
[应元件-挫志]。
[触元件-坚守]、[触元件-临敌]、
[触元件-焕发]、[触元件-破近]、
[触元件-激昂]、[应元件-抵抗]、
[应元件-应急]、[应元件-模糊]、
[应元件-短路]、[应元件-整葺]、
[应元件-挫志]。
[触元件-临敌]、[触元件-焕发].
[触元件-袭远]、[触元件-破近]、
[触元件-激昂]、[应元件-应急]、
[应元件-模糊]、[应元件-短路]、
[应元件-整葺]、[应元件-挫志]
[触元件-临敌]、[触元件-焕发]、
[触元件-袭远]、[触元件-破近]、
[触元件-激昂]、[应元件-应急]
[应元件-模糊]、[应元件-短路]、
[应元件-整葺]、[应元件-挫志]
[触元件-临敌]、[触元件-焕发]、
[应元件-应急]、[应元件-模糊]
[应元件-短路]、[应元件-整葺]、
[应元件-挫志]。
[触元件-临敌]、[触元件-焕发].
[应元件-应急]、[应元件-模糊]
[应元件-短路]、[应元件-整葺]、
[应元件-挫志]。
    """

    米凯拉 = """
[触元件-无患]、[触元件-凭逸]、
[触元件-猛进]、[触元件-共力]
[触元件-猛袭]、[触元件-决斗]、
[应元件-腾挪]、[应元件-同忾]、
[应元件-消弹]、[应元件-破躯]、
[应元件-进发]、[应元件-超然]。
[触元件-无患]、[触元件-凭逸]、
[触元件-猛进]、[触元件-共力]
[应元件-同忾]、[应元件-破躯]、
[应元件-进发]、[应元件-超然]
[触元件-无患]、[触元件-凭逸].
[触元件-猛进]、[触元件-共力]
[应元件-同忾]、[应元件-破躯]、
[应元件-进发]、[应元件-超然]。
[触元件-无患]、[触元件-凭逸].
[触元件-猛进]、[触元件-共力]、
[应元件-同忾]、[应元件-破躯]
[应元件-进发]、[应元件-超然]。
[触元件-无患]、[触元件-凭逸]、
[触元件-猛进]、[触元件-共力]、
[应元件-同忾]、[应元件-破躯]、
[应元件-进发]、[应元件-超然]。
    """

    泰欧 = """
[触元件-攻坚]、[触元件-精准]
[触元件W-背水]、[触元件W-沉着]
[触元件W-焕发]、[触元件W-凭逸]
[应元件-重整]、[应元件-激励]、
[应元件W-强击]、[应元件W-破臂]、
[应元件W-破足]、[应元件W-重整]
[应元件W-号令]。
[触元件-攻坚]、[触元件-精准]、
[应元件-重整]、[应元件-激励]
[触元件-攻坚]、[触元件-精准]
[应元件-重整]、[应元件-激励]
[触元件-攻坚]、[触元件-精准]
[触元件W-合击]、[触元件W-背水]、
[触元件W-沉着]、[触元件W-焕发]
[触元件W-凭逸]、[应元件-重整]
[应元件-激励]、[应元件W-强击]、
[应元件W-破臂]、[应元件W-破足]、
[应元件W-重整]、[应元件W-号令]。
[触元件-攻坚]、[触元件-精准]
[应元件-重整]、[应元件-激励]
[触元件-攻坚]、[触元件-精准]
[应元件-重整]、[应元件-激励]。
    """

    贝尔莎 = """
[触元件-连击]、[触元件-迅击]
[应元件-溅射]、[应元件-强攻]。
[触元件-连击]、[触元件-迅击]
[触元件W-侵攻]、[触元件W-反击]
[触元件W-连击]、[触元件W-精准]
[应元件-溅射]、[应元件-强攻].
[应元件W-溅射]、[应元件W-昂扬]
[应元件W-激励]、[应元件W-战栗].
[应元件W-蓬勃]。
[触元件-连击]、[触元件-迅击]
[应元件-溅射]、[应元件-强攻]。
[触元件-连击]、[触元件-迅击]、
[应元件-溅射]、[应元件-强攻]。
[触元件-连击]、[触元件-迅击].
[触元件W-侵攻]、[触元件W-反击]
[触元件W-警戒]、[触元件W-连击]
[触元件W-精准]、[应元件-溅射]
[应元件-强攻]、[应元件W-溅射]
[应元件W-昂扬]、[应元件W-激励]、
[应元件W-战栗]、[应元件W-蓬勃]
    """

    rail = {"name": "weapon_rail_13"}
    rail["boss"] = {}
    rail["boss"]["安德烈亚"] = extract_module(安德烈亚)
    rail["boss"]["米凯拉"] = extract_module(米凯拉)
    rail["boss"]["泰欧"] = extract_module(泰欧)
    rail["boss"]["贝尔莎"] = extract_module(贝尔莎)

    return module_boss_to_rail(rail)


def find_common_and_unique(weapon_rail_modules):
    # 所有
    # common_time = len(weapon_rail_modules["rail"])
    # 改为指定次数
    common_time = 2
    common = []
    for r1 in weapon_rail_modules["rail"]:
        for m1 in r1["modules"]:
            cnt = 1
            for r2 in weapon_rail_modules["rail"]:
                if r1 == r2:
                    continue
                for m2 in r2["modules"]:
                    if m1 == m2:
                        cnt += 1
                        break

            if common_time >= cnt:
                if "unique" not in r1:
                    r1["unique"] = []
                r1["unique"].append(m1)
            else:
                if m1 not in common:
                    common.append(m1)
    weapon_rail_modules["common"] = common
    return weapon_rail_modules


if __name__ == "__main__":
    r11 = rail11()
    r12 = rail12()
    r13 = rail13()
    r14 = rail14()
    r15 = rail15()
    r16 = rail16()

    weapon_rail_modules = {"rail": [r11, r12, r13, r14, r15, r16]}
    weapon_rail_modules = find_common_and_unique(weapon_rail_modules)
    print(weapon_rail_modules)
